"""
Задание 1. Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Через рекурсию. В задании нельзя применять циклы.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calc():
    operation = input('Enter a sign of the algebraic operation: ')
    if operation == "0":
        return print("Program is over.")
    elif operation != '+' and operation != '-' and operation != '*' \
            and operation != '/':
        return print("Wrong operation!"), calc()
    try:
        first_num = int(input('Enter a first number: '))
        second_num = int(input('Enter a second number: '))
    except ValueError:
        print('It is not a number.')
        return calc()
    else:
        operation_dict = {
            "+": first_num + second_num,
            "-": first_num - second_num,
            "/": first_num / second_num,
            "*": first_num * second_num,
        }
    return print(f'Ваш результат: {operation_dict[operation]}'), calc()


calc()
